#under edit
name: CI

on:
  push:
    branches: [ secret-file-buider ]
  pull_request:
    branches: [ secret-file-buider ]
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  ORGANIZATION: yes-soft-de
  ENVREPO: environment-tools
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run a multi-line script
        run: |
          source secret.option 
          echo "RIPP=${REPO}" >> $GITHUB_ENV
          echo "GKE_CLUSTER=${GKE_CLUSTER}" >> $GITHUB_ENV
          echo "GKE_ZONE=${GKE_ZONE}" >> $GITHUB_ENV
          echo "OWENR=${OWENR}" >> $GITHUB_ENV
          echo "TEMPLATE=${TEMPLATE}" >> $GITHUB_ENV
          
          echo txt is done 

      - uses: actions/checkout@v2
        with:
         repository: yes-soft-de/environment-tools
         token: ${{ secrets.ENVGHTOKEN }}
      - run: |
         echo 1
         mkdir ${{ env.RIPP  }}
         ls -la
         cd ${{ env.RIPP  }}
         echo 112
         ls -la
         echo $envpriv
         
         if [[ ${{ env.envpriv }}==true ]]
         then
           temp=https://github.com/${{ env.TEMPLATE }}.git
           echo $temp
           git clone $temp
           echo 2
           cd symfony-app-skeleton
           echo 3
           cp .env ../
           echo 4
           cd public
           echo 5
           cp .htaccess ../../
           echo 6
           cd ../../
           echo 7
           rm -rf symfony-app-skeleton
         
           echo 8
           
           echo create .env
           ls -al
           sed -i "s|FORREPLACE123|${{ env.RIPP  }}|g" .env
           sed -i "s|keyphr|${{ secrets.PASS }}|g" .env
          
           sed -i "s|FORREPLACE123|${{ env.RIPP  }}|g" .htaccess
           echo create .htaccess
           echo creating .env and .htaccess is done 
           echo 'FROM alpine:3.7' >> Dockerfile
           echo 'COPY . .' >> Dockerfile
           cat .env
           cat .htaccess
            
         fi
         mkdir jwt && cd jwt
         openssl genpkey -out private.pem -aes256 -pass pass:${{ secrets.PASS }} -algorithm rsa -pkeyopt rsa_keygen_bits:4096 
         openssl pkey -passin pass:${{ secrets.PASS }} -in private.pem -out public.pem -pubout
         echo creating new jwt 
      
         cd ..
         git add .
         
         git commit -a -m "add .env and .htacces and jwt"
         git push 

      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}


      - run: |
         gcloud --quiet auth configure-docker
         #cd ${{ env.RIPP  }}
         ls -al
         gcloud builds submit --tag=gcr.io/${{ secrets.GKE_PROJECT }}/secret
         
     
         kubectl apply -f configmap.yaml
         sed -i "s|REPLACEUserPassword|${{ secrets.USERPASSWORD }}|g" mysql.yaml
         sed -i "s|REPLACERooTPassword|${{ secrets.ROOTPASSWORD }}|g" mysql.yaml

         kubectl apply -f mysql.yaml
         
         kubectl apply -f server.yaml

          


         
